{
    "sourceFile": "CulTechConnectFrontOffice-main/src/app/components/services/auth-service.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1697401355574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1697401355574,
            "name": "Commit-0",
            "content": "import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {UserDto} from '../models/UserDto';\nimport {KeycloakService} from 'keycloak-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n    url = 'http://localhost:8092/api/user';\n\n\n  constructor(private http: HttpClient, private keycloakService: KeycloakService) { }\n\n    private getAuthHeaders(): HttpHeaders {\n        const token = this.keycloakService.getKeycloakInstance().token;\n        return new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    }\n\n    getProfile(): Observable<UserDto> {\n        let headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getAuthHeaders());\n        return this.http.get<UserDto>(this.url + '/profile/getUserProfile', { headers });\n    }\n\n    updateProfile(user: UserDto) {\n        let headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getAuthHeaders());\n        return this.http.post(`${this.url}/profile/updateProfile`, user, {headers});\n    }\n\n    changePassword( newPwd: string): Observable<any> {\n        let headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getAuthHeaders());\n        return this.http.post<any>(this.url  + '/profile/updatePassword', null,\n            { headers, params: {  newPwd }});\n    }\n\n    registration(user: UserDto) {\n      console.log (user);\n        return this.http.post(`${this.url}/visitor/register`, user);\n\n    }\n\n\n}\n"
        }
    ]
}